{"version":3,"file":"static/js/106.2dbc69ee.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItems/ContactItems.styled.jsx","components/ContactItems/ContactItems.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.js","pages/Contacts/Contacts.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  width: 65%;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  width: 288px;\n  font-size: 14px;\n  font-size: 16px;\n  div {\n    color: red;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 300px;\n  height: 40px;\n  font-size: 16px;\n  border-radius: 8px;\n  border: 1px solid rgb(26, 103, 11);\n  outline: none;\n\n  transition: border 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    border: 3px solid rgb(26, 103, 11);\n  }\n`;\n\nexport const StyledButton = styled.button`\n  width: 150px;\n  height: 40px;\n\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #094b07;\n  border-radius: 8px;\n  border: 1px solid rgb(26, 103, 11);\n\n  transform: scale(1);\n  transition: transform 250ms ease-out, background-color 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    transform: scale(1.1);\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contactsList;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectfilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normilezedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilezedFilter)\n    );\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\n\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledInput,\n  StyledButton,\n} from './ContactFormStyled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst nameRegex = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst numberRegex =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = object().shape({\n  name: string()\n    .max(20)\n    .matches(nameRegex, {\n      message:\n        \"Invalid name. Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\",\n    })\n    .required(),\n  number: string()\n    .min(3)\n    .matches(numberRegex, {\n      message:\n        'Invalid number. Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.',\n    })\n    .required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const check = contacts.filter(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (check.length) {\n      alert(`${values.name} is already in contacts`);\n    } else {\n      dispatch(addContact(values));\n      resetForm({\n        name: '',\n        number: '',\n      });\n    }\n  };\n  return (\n    <Formik\n      validationSchema={schema}\n      initialValues={initialValues}\n      onSubmit={(values, actions) => {\n        handleSubmit(values, actions);\n      }}\n    >\n      <StyledForm autoComplete=\" off\">\n        <StyledLabel>\n          Name\n          <StyledInput type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </StyledLabel>\n        <StyledLabel>\n          Number\n          <StyledInput type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </StyledLabel>\n        <StyledButton type=\"submit\">Add contacts</StyledButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const Items = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 400px;\n  height: 40px;\n  padding: 5px;\n  font-size: 16px;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid rgb(38, 153, 15);\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  height: 30px;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #094b07;\n  border-radius: 8px;\n  border: 1px solid rgb(26, 103, 11);\n\n  transform: scale(1);\n  transition: transform 250ms ease-out, background-color 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    transform: scale(1.1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Button, Items } from './ContactItems.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItems = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Items>\n      <p>\n        {name}:{number}\n      </p>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </Items>\n  );\n};\n\nContactItems.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  width: 600px;\n  padding: 20px;\n  overflow-y: auto;\n`;\n","import { ContactItems } from 'components/ContactItems/ContactItems';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectfilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectfilteredContacts);\n\n  return (\n    <>\n      <List>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactItems key={id} id={id} name={name} number={number} />\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 288px;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 40px;\n  font-size: 16px;\n  border-radius: 8px;\n  border: 1px solid rgb(26, 103, 11);\n\n  transition: border 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    border: 3px solid rgb(26, 103, 11);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './Filter.styled';\nimport { onChangeInput } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = e => {\n    dispatch(onChangeInput(e.target.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <Input name=\"filter\" type=\"text\" value={filter} onChange={handleFilter} />\n    </Label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst {\n  Container,\n\n  SectionStyle,\n  Section,\n  SectionTitle,\n} = require('../Contacts/Contacts.styled');\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <SectionStyle>\n        <Section>\n          <SectionTitle>Add contacts</SectionTitle>\n          <ContactForm />\n        </Section>\n        <Section>\n          <SectionTitle>Contacts</SectionTitle>\n\n          <Filter />\n          {isLoading && (\n            <RotatingLines height=\"45\" width=\"45\" strokeColor=\"grey\" />\n          )}\n          <ContactList />\n        </Section>\n      </SectionStyle>\n    </Container>\n  );\n};\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 33px;\n  background-color: #def68e;\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  width: 600px;\n  height: 570px;\n  padding: 20px;\n  background-color: #cbea65;\n  border-radius: 20px;\n  box-shadow: rgb(0 0 0 / 30%) 3px 5px 10px 3px;\n`;\n\nexport const SectionStyle = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: space-around;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 0;\n  font-size: 24px;\n`;\n"],"names":["StyledForm","styled","Form","StyledLabel","StyledInput","Field","StyledButton","selectContacts","state","contacts","contactsList","selectFilter","filter","selectIsLoading","isLoading","selectfilteredContacts","createSelector","normilezedFilter","toLowerCase","contact","name","includes","schema","object","shape","string","max","matches","message","required","number","min","ContactForm","dispatch","useDispatch","useSelector","validationSchema","initialValues","onSubmit","values","actions","resetForm","length","alert","addContact","handleSubmit","autoComplete","type","component","Items","Button","ContactItems","id","onClick","deleteContact","List","ContactList","filteredContacts","map","Label","Input","Filter","value","onChange","e","onChangeInput","target","require","Container","SectionStyle","Section","SectionTitle","useEffect","fetchContacts","height","width","strokeColor"],"sourceRoot":""}